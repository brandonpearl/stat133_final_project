hi = 3
hi
fib <- function(n) {}
fib <- function(n) {if (n == 0) {return 0} else if (n == 1) {return 1} else {return fib(n-1) + fib(n-2)}}
exit
quit
quit()
six <- read.table('sixdata.txt', header=FALSE)
six <- read.table("sixdata.txt", header=FALSE)
1+1
q()
rnorm(1, 0, 4)
?plot
one <- numeric(11)
two <- numeric(101)
three <- numeric(1001)
four <- numeric(10001)
tmp <- rnorm(1, 0, 4)
tmp
?tmp
?rnorm
sig <- 1
one[1] = tmp + sig
two[1] = tmp + sig
three[1] = tmp + sig
four[1] = tmp + sig
for (i in 2:10001) {
temp <- rnorm(1, 0, 4)
if (i < 12) {
one[i] = one[i-1] + temp + sig
}
if (i < 102) {
two[i] = two[i-1] + temp + sig
}
if (i < 1002) {
three[i] = three[i-1] + temp + sig
}
if (i < 10002) {
four[i] = four[i-1] + temp + sig
}
}
plot(one, 0:10)
?;lot
?plot
plot(0:10, one, main="1-10")
plot(0:100, two, main="1-100")
plot(0:1000, three, main="1-1000")
plot(0:10000, four, main="1-10000")
plot(0:100, two, main="1-100")
install.packages("rmarkdown")
source('D:/passt/Documents/hi.R')
source('D:/passt/Documents/hi.R')
source('D:/passt/Documents/hi.R')
rstudent
?rstudent
wage_data <- read.table("http://homepage.divms.uiowa.edu/~kchan/TSA/Datasets/wages.dat", header = TRUE)
View(wage_data)
plot(wage_data)
plot(wage_data, 1:length(wage_data))
length(wage_data)
plot(wage_data, 1:length(wage_data$wages))
?plot
plot(wage_data$wages, 1:length(wage_data$wages))
wage_data <- read.table("http://homepage.divms.uiowa.edu/~kchan/TSA/Datasets/wages.dat", header = TRUE)
plot(wage_data$wages, 1:length(wage_data$wages))
plot(wage_data$wages, 1:length(wage_data$wages), main="Wages over time")
library(rmarkdown)
?acr
??acr
?acf
?ARacf
?ARMAacf
ARMAacf(c(1, .2))
acf(ARMAacf(c(1, .2)))
?acf
?ARMAacf
library(knitr)
install.packages(knittr)
install.packages(knitr)
install.packages("knitr")
install.packages("knitr")
install.packages("rmarkdown")
library(knitr)
install.packages("stringi")
install.packages("rcolorbrewer")
install.packages("RColorBrewer")
rainbow()
?rainbow
rainbow(3)
plot(1)
plot(1, col=#ffa500)
)
plot(1, col=c("#FFA500"))
plot(1, col=c("#FFA500"), lty=c("solid"))
"one number" <- 4
one number
`one number`
q()
a <- "this is \" something"
a
typeof(a)
printf(a)
print(a)
q()
if (NA) 1
if (TRUE) 1
q()
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_chunk$set(echo = TRUE)
q()
matrix(1:12, nrow=3, ncol=4)
q()
install.packages("rvest")
library(rvest)
test <- html("http://www.basketball-reference.com/teams/GSW/2016.html#all_roster")
test <- read_html("http://www.basketball-reference.com/teams/GSW/2016.html#all_roster")
test
vignette("selectorgadget")
teams <- c("ATL",
"BRK",
"BOS",
"CHO",
"CHI",
"CLE",
"DAL",
"DEN",
"DET",
"GSW",
"HOU",
"IND",
"LAC",
"LAL",
"MEM",
"MIA",
"MIL",
"MIN",
"NOP",
"NYK",
"OKC",
"ORL",
"PHI",
"PHO",
"POR",
"SAC",
"SAS",
"TOR",
"UTA",
"WAS")
# Setup and execution of code to get player data
url_base <- "http://www.basketball-reference.com/teams"
url_file <- "2016.html"
dst_names <- c(roster = "roster-data",
totals = "stat-data",
salaries = "salary-data")
create_player_csvs <- function() {
for (team in teams)
team_url <- paste(url_base,
team,
url_file,
sep = "/")
print(paste("accessing", team_url))
xml_doc <- get_xml_document(team_url)
for (table_name in names(dst_names)) {
location <- paste0("#div_", table_name, " #", table_name)
print(location)
player_frame <- get_player_table(xml_doc, location)
# Roster's country isn't labeled, so we label it for convenience
if (table_name == "roster") {
colnames(player_frame)[7] = "Country"
}
# Where to write
file_name <- paste0("../../data/rawdata/",
unname(dst_names[url_file]),
"/",
team,
".csv")
# Write to csv in rawdata directory
write.csv(player_frame, file_name, row.names = FALSE)
}
}
source("../functions/raw-data-helpers.R")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("../functions/raw-data-helpers.R")
create_player_csvs()
create_player_csvs <- function() {
for (team in teams)
team_url <- paste(url_base,
team,
url_file,
sep = "/")
print(paste("accessing", team_url))
xml_doc <- get_xml_document(team_url)
for (table_name in names(dst_names)) {
location <- paste0("#div_", table_name, " #", table_name)
print(location)
player_frame <- get_player_table(xml_doc, location)
# Roster's country isn't labeled, so we label it for convenience
if (table_name == "roster") {
colnames(player_frame)[7] = "Country"
}
# Where to write
file_name <- paste0("../../data/rawdata/",
unname(dst_names[table_name]),
"/",
team,
".csv")
# Write to csv in rawdata directory
write.csv(player_frame, file_name, row.names = FALSE)
}
}
create_player_csvs()
create_player_csvs <- function(tables = names(dst_names)) {
for (team in teams)
team_url <- paste(url_base,
team,
url_file,
sep = "/")
print(paste("accessing", team_url))
xml_doc <- get_xml_document(team_url)
for (table_name in names(dst_names)) {
location <- paste0("#div_", table_name, " #", table_name)
player_frame <- get_player_table(xml_doc, location)
# Roster's country isn't labeled, so we label it for convenience
if (table_name == "roster") {
colnames(player_frame)[7] = "Country"
}
# Where to write
file_name <- paste0("../../data/rawdata/",
unname(dst_names[table_name]),
"/",
team,
".csv")
# Write to csv in rawdata directory
write.csv(player_frame, file_name, row.names = FALSE)
}
}
create_player_csvs(names(dst_names)[1])
create_player_csvs <- function(tables = names(dst_names)) {
for (team in teams)
team_url <- paste(url_base,
team,
url_file,
sep = "/")
print(paste("accessing", team_url))
xml_doc <- get_xml_document(team_url)
for (table_name in names(dst_names)) {
print(table_name)
location <- paste0("#div_", table_name, " #", table_name)
player_frame <- get_player_table(xml_doc, location)
# Roster's country isn't labeled, so we label it for convenience
if (table_name == "roster") {
colnames(player_frame)[7] = "Country"
}
# Where to write
file_name <- paste0("../../data/rawdata/",
unname(dst_names[table_name]),
"/",
team,
".csv")
# Write to csv in rawdata directory
write.csv(player_frame, file_name, row.names = FALSE)
}
}
create_player_csvs(names(dst_names)[1])
names(dst_names)[1]
create_player_csvs <- function(tables = names(dst_names)) {
for (team in teams)
team_url <- paste(url_base,
team,
url_file,
sep = "/")
print(paste("accessing", team_url))
xml_doc <- get_xml_document(team_url)
for (table_name in tables) {
print(table_name)
location <- paste0("#div_", table_name, " #", table_name)
player_frame <- get_player_table(xml_doc, location)
# Roster's country isn't labeled, so we label it for convenience
if (table_name == "roster") {
colnames(player_frame)[7] = "Country"
}
# Where to write
file_name <- paste0("../../data/rawdata/",
unname(dst_names[table_name]),
"/",
team,
".csv")
# Write to csv in rawdata directory
write.csv(player_frame, file_name, row.names = FALSE)
}
}
create_player_csvs(names(dst_names)[1])
# Teams to fetch
teams <- c("ATL",
"BRK",
"BOS",
"CHO",
"CHI",
"CLE",
"DAL",
"DEN",
"DET",
"GSW",
"HOU",
"IND",
"LAC",
"LAL",
"MEM",
"MIA",
"MIL",
"MIN",
"NOP",
"NYK",
"OKC",
"ORL",
"PHI",
"PHO",
"POR",
"SAC",
"SAS",
"TOR",
"UTA",
"WAS")
create_player_csvs <- function(tables = names(dst_names)) {
for (team in teams) {
team_url <- paste(url_base,
team,
url_file,
sep = "/")
print(paste("accessing", team_url))
xml_doc <- get_xml_document(team_url)
for (table_name in tables) {
print(table_name)
location <- paste0("#div_", table_name, " #", table_name)
player_frame <- get_player_table(xml_doc, location)
# Roster's country isn't labeled, so we label it for convenience
if (table_name == "roster") {
colnames(player_frame)[7] = "Country"
}
# Where to write
file_name <- paste0("../../data/rawdata/",
unname(dst_names[table_name]),
"/",
team,
".csv")
# Write to csv in rawdata directory
write.csv(player_frame, file_name, row.names = FALSE)
}
}
}
create_player_csvs(names(dst_names)[1])
html_table
?html_table
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Source our helper functions
source("../functions/raw-data-helpers.R")
# Teams to fetch
teams <- c("ATL",
"BRK",
"BOS",
"CHO",
"CHI",
"CLE",
"DAL",
"DEN",
"DET",
"GSW",
"HOU",
"IND",
"LAC",
"LAL",
"MEM",
"MIA",
"MIL",
"MIN",
"NOP",
"NYK",
"OKC",
"ORL",
"PHI",
"PHO",
"POR",
"SAC",
"SAS",
"TOR",
"UTA",
"WAS")
# Setup and execution of code to get player data
url_base <- "http://www.basketball-reference.com/teams"
url_file <- "2016.html"
dst_names <- c(roster = "roster-data",
totals = "stat-data",
salaries = "salary-data")
# Retrieves and stores player tables in csv files
# @param tables, the tables to fetch and save (subset of names(dst_names))
# @return NULL
create_player_csvs <- function(tables = names(dst_names)) {
for (team in teams) {
team_url <- paste(url_base,
team,
url_file,
sep = "/")
print(paste("accessing", team_url))
xml_doc <- get_xml_document(team_url)
for (table_name in tables) {
print(table_name)
location <- paste0("#div_", table_name, " #", table_name)
player_frame <- get_player_table(xml_doc, location)
# Roster's country isn't labeled, so we label it for convenience
if (table_name == "roster") {
colnames(player_frame)[7] = "Country"
}
# Where to write
file_name <- paste0("../../data/rawdata/",
unname(dst_names[table_name]),
"/",
team,
".csv")
# Write to csv in rawdata directory
write.csv(player_frame, file_name, row.names = FALSE)
}
}
}
create_player_csvs(names(dst_names)[1])
as.numeric("")
as.numeric(c("", 1, 2))
