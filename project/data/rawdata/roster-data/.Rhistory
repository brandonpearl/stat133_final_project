# clean salary-data
setwd("~/Documents/stat133_final_project/project/data/rawdata/salary-data")
folder <-
"~/Documents/stat133_final_project/project/data/rawdata/salary-data/"
salary_file = read.csv(paste(folder, file_list[k], sep = ''), as.is = TRUE)
if (length(removed) >= 1) {
salary_file = salary_file[-removed,]
}
colnames(salary_file)[1] <- "Rank"
colnames(salary_file)[2] <- "Player"
colnames(salary_file)[3] <- "Salary"
salary_file[, 1] <- as.numeric(salary_file[, 1])
salary_file[, 3] <-
sapply(str_split(salary_file[, 3], "[$]"), "[[", 2)
salary_file[, 3] <- gsub(",", "", salary_file[, 3])
salary_file[, 3] <- as.numeric(salary_file[, 3])
salary_file$Team <- rep(f_name[k], time = nrow(salary_file))
str(salary_file)
temp = data.frame()
temp = merge(
x = roster_file,
y = stat_file,
by = c("Player", "Team"),
all = TRUE
)
temp = merge(x = temp, y = salary_file, by = c("Player", "Team"), all = TRUE)
roster_salary_stats = rbind(roster_salary_stats, temp)
}
colnames(roster_salary_stats)[11] <- "Rank_Totals"
colnames(roster_salary_stats)[38] <- "Rank_Salary"
write.csv(
roster_salary_stats,
file = paste0('../../cleandata/', "roster-salary-stats" , ".csv"),
row.names = FALSE
)
ncol(roster_salary_stats)
roster_salary_stats
# clean-data-script oster-salary-stats.csv
library(stringr)
setwd("~/Documents/stat133_final_project/project/data/rawdata/roster-data")
folder <-
"~/Documents/stat133_final_project/project/data/rawdata/roster-data/"
file_list <- list.files(path = folder, pattern = "*.csv")
for (id in 1:length(file_list)) {
name <- str_split(file_list[id], pattern = '')
name <- unlist(name)
name <- name[1:which(name == '.') - 1]
f_name[id] <- paste0(name, collapse = '')
}
roster_salary_stats = data.frame()
removed = 0
# length(file_list)
for (k in 1:2){
setwd("~/Documents/stat133_final_project/project/data/rawdata/roster-data")
folder <-
"~/Documents/stat133_final_project/project/data/rawdata/roster-data/"
#read roster_file
roster_file = read.csv(paste(folder, file_list[k], sep = ''),
as.is = TRUE,
row.names = NULL, header = TRUE)
# change the variable name/col name
colnames(roster_file)[7] <- "roster.Country"
colnames(roster_file)[6] <- "roster.Birth Date"
col_names <-
sapply(str_split(colnames(roster_file), "[.]"), "[[", 2)
colnames(roster_file) <- col_names
index = c(1, 3, 4, 5, 8)
name = c("Number", "Position", "Height", "Weight", "Experience")
for (j in 1:length(index)) {
names(roster_file)[index[j]] <- paste(name[j])
}
# remove position
position_ls <- c("C", "PF", "SF", "SG", "PG")
removed =  which(!roster_file$Position %in% position_ls)
if (length(removed) >= 1) {
roster_file =  roster_file[-removed, ]
}
roster_file$Position = factor(roster_file$Position)
# change Number to numeric
roster_file[, 1] <- as.numeric(roster_file[, 1])
# Clean Country column ( change to upper case)
roster_file[, 7] <- toupper(roster_file[, 7])
# Clean the Experience Column
invalid_R = which(roster_file$Experience == "R")
if (length(invalid_R >= 1)) {
roster_file[, 8][which(roster_file$Experience == "R")] <- "0"
}
roster_file[, 8] <- as.numeric(roster_file[, 8])
# Clean the Height Column
ft = sapply(str_split(roster_file$Height, "-"), "[[", 1)
inches = sapply(str_split(roster_file$Height, "-"), "[[", 2)
roster_file$Height = round(as.numeric(paste0(ft, ".", inches)) * 0.3048, digits = 2)
# Clean the weight column
roster_file[, 5] = round(as.numeric(roster_file[, 5] * 0.453592), digits = 2)
# Clean the Birth Date column
year <-
sapply(str_split(roster_file$"Birth Date", ","), "[[", 2)
temp <-
sapply(str_split(roster_file$"Birth Date", ","), "[[", 1)
month <- str_trim(str_extract(temp, "\\D+"))
day <- str_trim(str_extract(temp, "\\d+"))
num2Month <- function(x) {
months <- c(
january = 1,
february = 2,
march = 3,
april = 4,
may = 5,
june = 6,
july = 7,
august = 8,
september = 9,
october = 10,
november = 11,
december = 12
)
x <- tolower(x)
month_new = lapply(x, function(x)
months[x])
month_new = as.numeric(unlist(month_new))
}
month = as.character(num2Month(month))
roster_file$"Birth Date" = as.Date(paste(year, month, day, sep = "-"),
format = "%Y-%m-%d")
# Clean the College Column
roster_file[, 9][which(roster_file$College == "")] <- NA
roster_file$Team <- rep(f_name[k], time = nrow(roster_file))
str(roster_file)
# clean stats-data
setwd("~/Documents/stat133_final_project/project/data/rawdata/stat-data")
folder <-
"~/Documents/stat133_final_project/project/data/rawdata/stat-data/"
stat_file = read.csv(paste(folder, file_list[k], sep = ''), as.is = TRUE)
# change column names
col_names <- c(
"Rank",
"Player",
"Age",
"Games",
"Games_Started",
"Minutes_Played",
"Field_Goals",
"Field_Goal_Attempts",
"Field_Goal_Percentage",
"3-Point_Field_Goals",
"3-Point_Field_Goal_Attempts",
"3-Point_Field_Goal_Percentage",
"2-Point_Field_Goals",
"2-point_Field_Goal_Attempts",
"2-Point_Field_Goal_Percentage",
"Effective_Field_Goal_Percentage",
"Free_Throws",
"Free_Throw_Attempts",
"Free_Throw_Percentage",
"Offensive_Rebounds",
"Defensive_Rebounds",
"Total_Rebounds",
"Assists",
"Steals",
"Blocks",
"Turnovers",
"Personal Fouls",
"Points"
)
colnames(stat_file) <- col_names
#remove the one whose position is not one of the 5 required positions
if (length(removed) >= 1) {
stat_file = stat_file[-removed,]
}
stat_file[, 1] <- as.numeric(stat_file[, 1])
for (i in 3:ncol(stat_file)) {
index = which(is.na(stat_file[, i]))
if (length(index) >= 1) {
stat_file[, i][which(is.na(stat_file[, i]))] <-  NA
}
stat_file[, i] = as.numeric(stat_file[, i])
}
stat_file$Team <- rep(f_name[k], time = nrow(stat_file))
str(stat_file)
# clean salary-data
setwd("~/Documents/stat133_final_project/project/data/rawdata/salary-data")
folder <-
"~/Documents/stat133_final_project/project/data/rawdata/salary-data/"
salary_file = read.csv(paste(folder, file_list[k], sep = ''), as.is = TRUE)
if (length(removed) >= 1) {
salary_file = salary_file[-removed,]
}
colnames(salary_file)[1] <- "Rank"
colnames(salary_file)[2] <- "Player"
colnames(salary_file)[3] <- "Salary"
salary_file[, 1] <- as.numeric(salary_file[, 1])
salary_file[, 3] <-
sapply(str_split(salary_file[, 3], "[$]"), "[[", 2)
salary_file[, 3] <- gsub(",", "", salary_file[, 3])
salary_file[, 3] <- as.numeric(salary_file[, 3])
salary_file$Team <- rep(f_name[k], time = nrow(salary_file))
str(salary_file)
temp = data.frame()
temp = merge(
x = roster_file,
y = stat_file,
by = c("Player", "Team"),
all = TRUE
)
temp = merge(x = temp, y = salary_file, by = c("Player", "Team"), all = TRUE)
roster_salary_stats = rbind(roster_salary_stats, temp)
}
colnames(roster_salary_stats)[11] <- "Rank_Totals"
colnames(roster_salary_stats)[38] <- "Rank_Salary"
write.csv(
roster_salary_stats,
file = paste0('../../cleandata/', "roster-salary-stats" , ".csv"),
row.names = FALSE
)
ncol(roster_salary_stats)
# clean-data-script oster-salary-stats.csv
library(stringr)
setwd("~/Documents/stat133_final_project/project/data/rawdata/roster-data")
folder <-
"~/Documents/stat133_final_project/project/data/rawdata/roster-data/"
file_list <- list.files(path = folder, pattern = "*.csv")
for (id in 1:length(file_list)) {
name <- str_split(file_list[id], pattern = '')
name <- unlist(name)
name <- name[1:which(name == '.') - 1]
f_name[id] <- paste0(name, collapse = '')
}
f_name = c()
# clean-data-script oster-salary-stats.csv
library(stringr)
setwd("~/Documents/stat133_final_project/project/data/rawdata/roster-data")
folder <-
"~/Documents/stat133_final_project/project/data/rawdata/roster-data/"
file_list <- list.files(path = folder, pattern = "*.csv")
f_name = c()
for (id in 1:length(file_list)) {
name <- str_split(file_list[id], pattern = '')
name <- unlist(name)
name <- name[1:which(name == '.') - 1]
f_name[id] <- paste0(name, collapse = '')
}
roster_salary_stats = data.frame()
removed = 0
# length(file_list)
for (k in 1:2){
setwd("~/Documents/stat133_final_project/project/data/rawdata/roster-data")
folder <-
"~/Documents/stat133_final_project/project/data/rawdata/roster-data/"
#read roster_file
roster_file = read.csv(paste(folder, file_list[k], sep = ''),
as.is = TRUE,
row.names = NULL, header = TRUE)
# change the variable name/col name
colnames(roster_file)[7] <- "roster.Country"
colnames(roster_file)[6] <- "roster.Birth Date"
col_names <-
sapply(str_split(colnames(roster_file), "[.]"), "[[", 2)
colnames(roster_file) <- col_names
index = c(1, 3, 4, 5, 8)
name = c("Number", "Position", "Height", "Weight", "Experience")
for (j in 1:length(index)) {
names(roster_file)[index[j]] <- paste(name[j])
}
# remove position
position_ls <- c("C", "PF", "SF", "SG", "PG")
removed =  which(!roster_file$Position %in% position_ls)
if (length(removed) >= 1) {
roster_file =  roster_file[-removed, ]
}
roster_file$Position = factor(roster_file$Position)
# change Number to numeric
roster_file[, 1] <- as.numeric(roster_file[, 1])
# Clean Country column ( change to upper case)
roster_file[, 7] <- toupper(roster_file[, 7])
# Clean the Experience Column
invalid_R = which(roster_file$Experience == "R")
if (length(invalid_R >= 1)) {
roster_file[, 8][which(roster_file$Experience == "R")] <- "0"
}
roster_file[, 8] <- as.numeric(roster_file[, 8])
# Clean the Height Column
ft = sapply(str_split(roster_file$Height, "-"), "[[", 1)
inches = sapply(str_split(roster_file$Height, "-"), "[[", 2)
roster_file$Height = round(as.numeric(paste0(ft, ".", inches)) * 0.3048, digits = 2)
# Clean the weight column
roster_file[, 5] = round(as.numeric(roster_file[, 5] * 0.453592), digits = 2)
# Clean the Birth Date column
year <-
sapply(str_split(roster_file$"Birth Date", ","), "[[", 2)
temp <-
sapply(str_split(roster_file$"Birth Date", ","), "[[", 1)
month <- str_trim(str_extract(temp, "\\D+"))
day <- str_trim(str_extract(temp, "\\d+"))
num2Month <- function(x) {
months <- c(
january = 1,
february = 2,
march = 3,
april = 4,
may = 5,
june = 6,
july = 7,
august = 8,
september = 9,
october = 10,
november = 11,
december = 12
)
x <- tolower(x)
month_new = lapply(x, function(x)
months[x])
month_new = as.numeric(unlist(month_new))
}
month = as.character(num2Month(month))
roster_file$"Birth Date" = as.Date(paste(year, month, day, sep = "-"),
format = "%Y-%m-%d")
# Clean the College Column
roster_file[, 9][which(roster_file$College == "")] <- NA
roster_file$Team <- rep(f_name[k], time = nrow(roster_file))
str(roster_file)
# clean stats-data
setwd("~/Documents/stat133_final_project/project/data/rawdata/stat-data")
folder <-
"~/Documents/stat133_final_project/project/data/rawdata/stat-data/"
stat_file = read.csv(paste(folder, file_list[k], sep = ''), as.is = TRUE)
# change column names
col_names <- c(
"Rank",
"Player",
"Age",
"Games",
"Games_Started",
"Minutes_Played",
"Field_Goals",
"Field_Goal_Attempts",
"Field_Goal_Percentage",
"3-Point_Field_Goals",
"3-Point_Field_Goal_Attempts",
"3-Point_Field_Goal_Percentage",
"2-Point_Field_Goals",
"2-point_Field_Goal_Attempts",
"2-Point_Field_Goal_Percentage",
"Effective_Field_Goal_Percentage",
"Free_Throws",
"Free_Throw_Attempts",
"Free_Throw_Percentage",
"Offensive_Rebounds",
"Defensive_Rebounds",
"Total_Rebounds",
"Assists",
"Steals",
"Blocks",
"Turnovers",
"Personal Fouls",
"Points"
)
colnames(stat_file) <- col_names
#remove the one whose position is not one of the 5 required positions
if (length(removed) >= 1) {
stat_file = stat_file[-removed,]
}
stat_file[, 1] <- as.numeric(stat_file[, 1])
for (i in 3:ncol(stat_file)) {
index = which(is.na(stat_file[, i]))
if (length(index) >= 1) {
stat_file[, i][which(is.na(stat_file[, i]))] <-  NA
}
stat_file[, i] = as.numeric(stat_file[, i])
}
stat_file$Team <- rep(f_name[k], time = nrow(stat_file))
str(stat_file)
# clean salary-data
setwd("~/Documents/stat133_final_project/project/data/rawdata/salary-data")
folder <-
"~/Documents/stat133_final_project/project/data/rawdata/salary-data/"
salary_file = read.csv(paste(folder, file_list[k], sep = ''), as.is = TRUE)
if (length(removed) >= 1) {
salary_file = salary_file[-removed,]
}
colnames(salary_file)[1] <- "Rank"
colnames(salary_file)[2] <- "Player"
colnames(salary_file)[3] <- "Salary"
salary_file[, 1] <- as.numeric(salary_file[, 1])
salary_file[, 3] <-
sapply(str_split(salary_file[, 3], "[$]"), "[[", 2)
salary_file[, 3] <- gsub(",", "", salary_file[, 3])
salary_file[, 3] <- as.numeric(salary_file[, 3])
salary_file$Team <- rep(f_name[k], time = nrow(salary_file))
str(salary_file)
temp = data.frame()
temp = merge(
x = roster_file,
y = stat_file,
by = c("Player", "Team"),
all = TRUE
)
temp = merge(x = temp, y = salary_file, by = c("Player", "Team"), all = TRUE)
roster_salary_stats = rbind(roster_salary_stats, temp)
}
colnames(roster_salary_stats)[11] <- "Rank_Totals"
colnames(roster_salary_stats)[38] <- "Rank_Salary"
write.csv(
roster_salary_stats,
file = paste0('../../cleandata/', "roster-salary-stats" , ".csv"),
row.names = FALSE
)
ncol(roster_salary_stats)
ncol(roster_file)
ncol(stat_file)
ncol(salary_file)
#clean stat-data r
setwd("~/Documents/stat133_final_project/project/data/rawdata/stat-data")
folder <-
"~/Documents/stat133_final_project/project/data/rawdata/stat-data/"
file_list <- list.files(path = folder, pattern = "*.csv")
library(stringr)
f_name <- as.vector(0)
for (i in 1:length(file_list)) {
name <- str_split(file_list[i], pattern = '')
name <- unlist(name)
name <- name[1:which(name == '.') - 1]
f_name[i] <- paste0(name, collapse = '')
}
for (k in 1:2) {
file_name = read.csv(paste(folder, file_list[k], sep = ''), as.is = TRUE)
# change column names
col_names <- c(
"Rank",
"Player",
"Age",
"Games",
"Games_Started",
"Minutes_Played",
"Field_Goals",
"Field_Goal_Attempts",
"Field_Goal_Percentage",
"3-Point_Field_Goals",
"3-Point_Field_Goal_Attempts",
"3-Point_Field_Goal_Percentage",
"2-Point_Field_Goals",
"2-point_Field_Goal_Attempts",
"2-Point_Field_Goal_Percentage",
"Effective_Field_Goal_Percentage",
"Free_Throws",
"Free_Throw_Attempts",
"Free_Throw_Percentage",
"Offensive_Rebounds",
"Defensive_Rebounds",
"Total_Rebounds",
"Assists",
"Steals",
"Blocks",
"Turnovers",
"Personal Fouls",
"Points"
)
colnames(file_name) <- col_names
#remove the one whose position is not one of the 5 required positions
if (length(removed) >= 1) {
file_name = file_name[-removed, ]
}
file_name[, 1] <- as.numeric(file_name[, 1])
for (i in 3:ncol(file_name)) {
index = which(is.na(file_name[, i]))
if (length(index) >= 1) {
file_name[, i][which(is.na(file_name[, i]))] <-  NA
}
file_name[, i] = as.numeric(file_name[, i])
}
file_name$Team <- rep(f_name[i], time = nrow(file_name))
write.csv(
file_name,
file = paste0('../../cleandata/clean-stat-data/', f_name[k] , ".csv"),
row.names = FALSE
)
}
nrol(file_name)
ncol(file_name)
file_name = read.csv(paste(folder, file_list[k], sep = ''), as.is = TRUE)
ncol(file_name)
setwd("~/Documents/stat133_final_project/project/data/rawdata/salary-data")
folder <-
"~/Documents/stat133_final_project/project/data/rawdata/salary-data/"
file_list <- list.files(path = folder, pattern = "*.csv")
library(stringr)
f_name <- as.vector(0)
for (i in 1:length(file_list)) {
name <- str_split(file_list[i], pattern = '')
name <- unlist(name)
name <- name[1:which(name == '.') - 1]
f_name[i] <- paste0(name, collapse = '')
}
k = 1
file_name = read.csv(paste(folder, file_list[k], sep = ''), as.is = TRUE)
ncol(file_name)
setwd("~/Documents/stat133_final_project/project/data/rawdata/roster-data")
folder <-
"~/Documents/stat133_final_project/project/data/rawdata/roster-data/"
# path to folder that holds multiple .csv files
file_list <- list.files(path = folder, pattern = "*.csv")
library(stringr)
f_name <- as.vector(0)
for (i in 1:length(file_list)) {
name <- str_split(file_list[i], pattern = '')
name <- unlist(name)
name <- name[1:which(name == '.') - 1]
f_name[i] <- paste0(name, collapse = '')
}
k = 1
file_name = read.csv(paste(folder, file_list[k], sep = ''), as.is = TRUE)
k = 1ncol(file_name)
ncol(file_name)
